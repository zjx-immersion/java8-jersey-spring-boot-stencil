buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
//apply plugin: "io.spring.dependency-management"

tasks.withType(JavaCompile) {
    options.encoding = 'utf-8'
}

jar {
    baseName = 'spring-boot-gaia'
    version = '0.0.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

findbugs {
    excludeFilter = new File(project(":").projectDir, "config/findbugs/excludeBugsFilter.xml")
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

checkstyle {
    toolVersion = "6.7"
    configFile = new File(project(":").projectDir, "config/checkstyle/checkstyle.xml")
}

task unitTest(type : Test) {
    exclude 'com/thoughtworks/gaia/test/functional/**'
}

task functionalTest(type : Test) {
    include 'com/thoughtworks/gaia/test/functional/**'
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "http://repo.spring.io/release" }
  maven { url "http://repo.spring.io/milestone" }
  maven { url "http://repo.spring.io/snapshot" }
}

ext.libraries = [
        assertj_core: dependencies.create('org.assertj:assertj-core:3.0.0'),
        swagger_jersey2_jaxrs: dependencies.create('io.swagger:swagger-jersey2-jaxrs:1.5.8'),
        commons_lang: dependencies.create('commons-lang:commons-lang:2.6'),
        yaz: dependencies.create('com.exmertec.yaz:yaz:0.15'),
        quartz: dependencies.create('org.quartz-scheduler:quartz:2.2.1'),
        orika_core: dependencies.create('ma.glasnost.orika:orika-core:1.4.6'),
        flyway_core: dependencies.create('org.flywaydb:flyway-core:4.2.0'),
        commons_codec: dependencies.create('commons-codec:commons-codec:1.9'),
        commons_beanutils: dependencies.create('commons-beanutils:commons-beanutils:1.9.2'),
        hashids: dependencies.create('org.hashids:hashids:1.0.1'),
        jedis: dependencies.create('redis.clients:jedis:2.7.2')
]

dependencies {
    compile("joda-time:joda-time")
    compile libraries.jedis
    compile('org.springframework:spring-jms')
    compile('org.apache.activemq:activemq-broker')
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jersey")
    compile("org.springframework.boot:spring-boot-starter-logging")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1'
    // https://mvnrepository.com/artifact/com.jayway.restassured/rest-assured
    compile group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'
    compile("org.springframework.boot:spring-boot-starter-actuator")

    compile("mysql:mysql-connector-java")
    compile("org.springframework:spring-context-support")
    compile("org.springframework:spring-context")

    //compile("org.springframework.cloud:spring-cloud-starter-config")
    //compile("org.springframework.cloud:spring-cloud-starter-eureka")

    compile libraries.swagger_jersey2_jaxrs
    compile libraries.commons_lang
    compile libraries.yaz
    compile libraries.quartz
    compile libraries.orika_core
    compile libraries.flyway_core
    compile libraries.commons_codec
    compile libraries.commons_beanutils
    compile libraries.hashids

    testCompile("com.h2database:h2")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
    testCompile libraries.assertj_core
}

idea {
    project {
        languageLevel = '1.8'
        jdkName = '1.8'

        ipr {
            withXml { provider ->
                provider.node.component
                        .find { it.@name == 'VcsDirectoryMappings' }
                        .mapping.@vcs = 'Git'
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
